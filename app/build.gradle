plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.alphaomardiallo.parisforkids"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xallow-jvm-ir-dependencies",
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    hilt {
        enableAggregatingTask = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    namespace 'com.alphaomardiallo.parisforkids'
}

dependencies {

    implementation "androidx.core:core-ktx:$kotlin_version"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleRuntime_version"
    implementation "androidx.activity:activity-compose:$composeActivity_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junitTest_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //TEST
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.test.ext:truth:$truth_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "androidx.test.ext:truth:$truth_version"

    //DAGGER - HILT
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    //LIFECYCLE
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //NAVIGATION
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //PREFERENCE DATASTORE
    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    //WORK MANAGER
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    //COROUTINES
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    //RETROFIT - API CLIENT
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.google.code.gson:gson:$gson_version"

    //OKHTTP
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"

    //EASY PERMISSIONS - runtime permissions library
    implementation "com.vmadalin:easypermissions-ktx:$easypermission_version"

    //FIREBASE
    //Firebase BOM
    implementation platform("com.google.firebase:firebase-bom:firebaseBom_version")
    //Firebase Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'
    //Firestore database
    implementation 'com.google.firebase:firebase-firestore-ktx'
    //Firebase Auth
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiAuth"
    //Firebase cloud storage
    implementation 'com.google.firebase:firebase-storage'

    //ROOM DATABASE
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    //Paging
    implementation "androidx.room:room-paging:$room_version"

    //COIL
    implementation "io.coil-kt:coil:$coil_version"
    implementation "io.coil-kt:coil-compose:$coil_version"

    //ICONS
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    //PAGING 3
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-compose:$pagingCompose_version"
    testImplementation "androidx.paging:paging-common:$paging_version"
}